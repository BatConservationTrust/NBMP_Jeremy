#============================================================================================================================
#======================================== Species Accumulation curves =======================================================
#============================================================================================================================

#Example of species accumulation that we can use
sp<-read.table("C:/Users/Jeremy/Documents/BCT internship/Survey effort - Acoustic data/specaccum.txt",header=TRUE,sep="\t",dec=".")
sp1<-sp[,-1:-2]
cottage<- subset(sp,Site=="AAvery")[,-1:-2] 
nursery<- subset(sp,Site=="JWilliams")[,-1:-2]
parkfarm<- subset(sp,Site=="THole")[,-1:-2]

library(vegan)
#Species acc curve at the landscape scale
spec<-specaccum(sp1,"random",permutations=10000)
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 1, 0, 0)) 
plot(spec,lwd=2,ci.type ="bar",ci.lty=1,ci.col = "grey",cex.axis = 1.5,xlab="Number of nights", ylab="Number of species",cex.lab=1.5,ylim=c(0,12),xlim=c(0,55))
points(spec$richness~spec$sites, pch=16,col="black",cex=1.2)
title(main="Species accumulation curve",cex.main=1.5)
summary(spec)
spec

#Species acc curve for Cottage
spec<-specaccum(cottage,"random",permutations=10000)
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 1, 0, 0)) 
plot(spec,lwd=2,ci.type ="bar",ci.lty=1,ci.col = "grey",cex.axis = 1.5,xlab="Number of nights", ylab="Number of species",cex.lab=1.5,ylim=c(0,12),xlim=c(0,20))
points(spec$richness~spec$sites, pch=16,col="black",cex=1.2)
title(main="Species accumulation curve",cex.main=1.5)
spec

#Species acc curve for Nursery
spec<-specaccum(nursery,"random",permutations=10000)
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 1, 0, 0)) 
plot(spec,lwd=2,ci.type ="bar",ci.lty=1,ci.col = "grey",cex.axis = 1.5,xlab="Number of nights", ylab="Number of species",cex.lab=1.5,ylim=c(0,12),xlim=c(0,20))
points(spec$richness~spec$sites, pch=16,col="black",cex=1.2)
points(spec$richness~spec$sites, pch=16,col="black",cex=1.2)
title(main="Species accumulation curve",cex.main=1.5)
spec

#Species acc curve for Park Farm
spec<-specaccum(parkfarm,"random",permutations=10000)
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 1, 0, 0)) 
plot(spec,lwd=2,ci.type ="bar",ci.lty=1,ci.col = "grey",cex.axis = 1.5,xlab="Number of nights", ylab="Number of species",cex.lab=1.5,ylim=c(0,12),xlim=c(0,20))
points(spec$richness~spec$sites, pch=16,col="black",cex=1.2)
points(spec$richness~spec$sites, pch=16,col="black",cex=1.2)
title(main="Species accumulation curve",cex.main=1.5)
spec

#============================================================================================================================
#======================================== Site occupancy models =============================================================
#============================================================================================================================

# Script associated to (i) the PDF entitled "site occupancy models" from Marc Mazerolle / University of Laval (Canada) and (ii) the description of the package "unmarked"
# Goal: investigating which factors influence the occupancy and detection probabiilities (site covariates and sample covariates) of bats
# If the probability of occupancy =1, then it is still useful to investigate which factors affect on the detection probabilities. 
# Similar methodology used with the software "Presence" (MacKenzie et al. 2002). 

#================ Part 2. 
#============================================================================================================================
#--------------
#I. Data import
#------------------------------------------------------------------------------------------------------------------------------

#Package required for site occupancy models in R
library(unmarked)
#Important things to know: generally site covariates ~ the occupancy whereas sample covariates ~ detection probabilities.
#Import site covariates
sicv<-read.table("C:/Users/Jeremy/Documents/BCT internship/Survey effort - Acoustic data/sitecovar1.txt",header=TRUE,sep="\t",dec=".")
#Import sample covariates
temp<-read.table("C:/Users/Jeremy/Documents/BCT internship/Survey effort - Acoustic data/airtempf.txt",header=TRUE,sep="\t",dec=".")
hum<-read.table("C:/Users/Jeremy/Documents/BCT internship/Survey effort - Acoustic data/humf.txt",header=TRUE,sep="\t",dec=".")
wind<-read.table("C:/Users/Jeremy/Documents/BCT internship/Survey effort - Acoustic data/windf.txt",header=TRUE,sep="\t",dec=".")
rain<-read.table("C:/Users/Jeremy/Documents/BCT internship/Survey effort - Acoustic data/rainf.txt",header=TRUE,sep="\t",dec=".")

#Import detection history data
sp1<-read.table("C:/Users/Jeremy/Documents/BCT internship/Survey effort - Acoustic data/ghb.txt",header=TRUE,sep="\t",dec=".")

#-------------------
#II. Data formatting
#------------------------------------------------------------------------------------------------------------------------------
#Check the mean of site-specific covariates
colMeans(sicv[,c("bfc","wat")])

#Check the mean of sample covariates
mean(as.vector(as.matrix(temp[,-1])),na.rm=T)
mean(as.vector(as.matrix(humidity[,-1])),na.rm=T)

#Standardized data
library(vegan)
sicvST<-decostand(sicv[,-1],"standardize")
tempST<-decostand(temp[,-1],"standardize",na.rm=TRUE)
humST<-decostand(hum[,-1],"standardize",na.rm=T)


sp1<-sp1[,-1]
hum<-hum[,-1]
temp<-temp[,-1]
#Data formatting with unmarkedFrameOccu
sp1occ<-unmarkedFrameOccu(y= sp1,siteCovs =sicvST , obsCovs = list(HumST=humST,TempST=tempST))
summary(sp1occ)

#-------------------
#III. Model building
#------------------------------------------------------------------------------------------------------------------------------

#Null model
#1st ~ -> for prob of detection
#2nd ~ -> for prob of occupancy
#Caution: with unmarked, we used "@" instead of "$"
#We can use same models like with Presence software
m0<-occu(~ 1 ~ 1,data=sp1occ)
summary(m0)
str(m0)

#equivalent to psi(.) p(.) in Presence
#Caution: always have a look to the output
m1<-occu(~ 1 ~ bfc,data=sp1occ)
summary(m1)

#Most parameterized model
m0<-occu(~ 1 ~ 1,data=sp1occ)  
m1<-occu(~HumST+TempST ~ bfc+wat,data=sp1occ)
summary(m1)

#Check the Goodness of fit (Test; MacKenzie & Bailey 2004)
#Do it using the most parameterized (complex) model
#We can get a graph of the distribution of X2 observed compared to the X2 got with bootstrap.
#If c.hat.est > 1   => low fit, need to use QAIC values (quasi-AIC) or QAICc (depending on the sample size; if n <= 40)

library(AICcmodavg)
gof<-mb.gof.test(m1,nsim=1000,plot.hist=TRUE)
#nsim=1000 is enough; get the same result as 10 000.
gof$chisq.table
gof$c.hat.est

#-------------------
#IV. Model selection
#------------------------------------------------------------------------------------------------------------------------------

#Select the best model automatically
library(MuMIn)
#Most parameterized (complex) model
m00<-occu(~HumST+TempST ~ bfc+wat,data=sp1occ)
options(na.action = "na.fail")
dd<-dredge(m00)
subset(dd, delta < 1.99)

m1<-occu(~TempST ~ 1,data=sp1occ)
m2<-occu(~HumST+TempST ~ 1,data=sp1occ)
m3<-occu(~TempST ~ bfc,data=sp1occ)
m4<-occu(~TempST ~ wat,data=sp1occ)
m5<-occu(~TempST+wat ~ wat,data=sp1occ)
summary(m5)

candidates<-list(m1,m2,m3,m4)
names<-c("m1","m2","m3","m4")
aictab(cand.set= candidates, modnames = names,c.hat = 1)
#if c.hat.est > 1, we have to adjust the model selection
#More details in: http://www.inside-r.org/packages/cran/AICcmodavg/docs/aictab

lc <- linearComb(m5, c(1, 2), type="state") # Intercept=1, bosq=2
backTransform(lc)
m5<-occu(~Hum ~ 1 ,data=sp1occ)
summary(m5)
newdata <- data.frame(Hum=seq(0, 100, length=50)) 
x<-predict(m5, type="det", newdata=newdata)
str(x)
mean(x$Predicted)
plot(x$Predicted)


newdata <- data.frame(wat=seq(-2, 2, length=50)) 
x<-predict(m5, type="state", newdata=newdata)
str(x)
mean(x$Predicted)

newdata <- data.frame(TempST=seq(-2, 2, length=50)) 
x<-predict(m1, type="det", newdata=newdata)
str(x)
mean(x$Predicted)

#------------------
#V. Model averaging
#------------------------------------------------------------------------------------------------------------------------------

m<-modavg(cand.set= candidates, modnames = names, c.hat=1,parm="TempST",parm.type="detect")
#weighted estimated of the temperature
#parm -> parameter that we want to explore
#parm.type -> we need to specify if parameter correspond to prob of detection or psi

#Predictions ponderees en utilisant les modeles: 
new.dats<-data.frame(TempST=
                       seq(from=min(tempST,na.rm=T),
                           to=max(tempST,na.rm=T),
                           length.out=45),
                     HumST=0)
preds<-modavgPred(cand.set = candidates, modnames = names,newdata=new.dats, c.hat = 1, type="response", parm.type="detect")
preds

boot.wt(cand.set=m, modnames = names, second.ord = TRUE)

new.dats$mod.avg.pred<-preds$mod.avg.pred
new.dats$uncond.se<-preds$uncond.se
#Predicted values + inconditionnal SE

preds.logit<-modavgPred(cand.set=candidates,modnames=names,c.hat=1,newdata=new.dats, type="link", parm.type="detect")
#Confidence intervals calculated with logit

new.dats$mod.avg.pred.logit<-preds.logit$mod.avg.pred
new.dats$uncond.se.logit<-preds.logit$uncond.se
#add to dateset

new.dats$low95<-plogis(new.dats$mod.avg.pred.logit - 1.96 * new.dats$uncond.se.logit)
new.dats$upp95<-plogis(new.dats$mod.avg.pred.logit + 1.96 * new.dats$uncond.se.logit)
#95% CI converted to original data

#quelquepart, besoin de remettre les donnees originales sur le graph pour avoir plus de sens:
#decentre et dereduit: x = (xi * SD) + Moy

#---------------------------------------------------------------------------------------
#VI. Graph to display how the detection probability is influenced by sample covariate(s)
#------------------------------------------------------------------------------------------------------------------------------

#graph looks ok but not the confidence bands; need to de-rescale variables (orginal var.)  

  plot(new.dats$mod.avg.pred~new.dats$TempST,
             ylab="Detection probability",
             xlab=expression(paste("Averaged ambient temperature (",degree,"C)")),
            ylim=range(c(new.dats$low95,new.dats$upp95)))
#create plot
lines(y=new.dats$low95,x=new.dats$TempST,lty="dotted")
lines(y=new.dats$upp95,x=new.dats$TempST,lty="dotted")
#add confidence bands


#============================================================================================================================
#======================================== Detection probabilities: plot ====================================================
#============================================================================================================================

library(lattice)

#Pipistrellus pygmaeus
pyg<-read.table("F:/Survey effort - Acoustic data/Detection graph/pygDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(pyg,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Pipistrellus pygmaeus")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Pipistrellus pipistrellus
pip<-read.table("F:/Survey effort - Acoustic data/Detection graph/pipDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(pip,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Pipistrellus pipistrellus")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Pipistrellus nathusii
nath<-read.table("F:/Survey effort - Acoustic data/Detection graph/nathDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(nath,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Pipistrellus nathusii")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Rhinolophus ferrumequinum
ghb<-read.table("F:/Survey effort - Acoustic data/Detection graph/ghbDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(ghb,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Rhinolophus ferrumequinum")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Rhinolophus hipposideros
lhb<-read.table("F:/Survey effort - Acoustic data/Detection graph/lhbDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(lhb,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Rhinolophus hipposideros")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Nyctalus noctula
noc<-read.table("F:/Survey effort - Acoustic data/Detection graph/nocDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(noc,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Nyctalus noctula")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Nyctalus leisleri
leis<-read.table("F:/Survey effort - Acoustic data/Detection graph/leisDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(leis,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Nyctalus leisleri")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Eptesicus serotinus
sero<-read.table("F:/Survey effort - Acoustic data/Detection graph/seroDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(sero,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(italic("Eptesicus serotinus")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Plecotus spp.
plec<-read.table("F:/Survey effort - Acoustic data/Detection graph/plecDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(plec,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(paste(italic("Plecotus")," spp.")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

#Myotis spp.
myo<-read.table("F:/Survey effort - Acoustic data/Detection graph/myoDET.txt",header=TRUE,sep="\t",dec=".")

boxplot(myo,outline=FALSE, xlab = "Number of sampling nights",
        ylab = "Probability of detection",cex.lab=1.25,cex.main=1.25,xaxt='n', ann=FALSE,
        ylim = c(0, 1),main=expression(paste(italic("Myotis")," spp.")))
abline(h=0.95,lty=3)
axis(side = 1, at = seq(0, 15, by = 1), labels = TRUE, tcl = -0.2)

